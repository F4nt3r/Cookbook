@using X.PagedList
@model IPagedList<Cookbook.Models.Recipe>
@using X.PagedList.Mvc.Core;
<link rel="stylesheet" href="~/css/indexStyle.css" />
@{
    ViewData["Title"] = "Recipes";
}

<h1>Recipes</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<form asp-controller="Recipes" asp-action="Index" method="get" class="form-inline my-2">
    <input class="form-control mr-sm-2" type="search" name="searchString" placeholder="Search Title" aria-label="Search" style="width: 200px;" />
    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
</form>

<div class="sort-options">
    <a href="#" class="sort" data-sort-by="Title">Sort by Title</a> |
    <a href="#" class="sort" data-sort-by="Ratings">Sort by Ratings</a>
</div>

<div class="recipes-grid">
    @foreach (var item in Model)
    {
        var averageRating = item.Ratings.Any() ? item.Ratings.Average(r => r.Score) : 0;
        <div class="recipe-tile">
            <a asp-action="Details" asp-route-id="@item.Id">
                <div class="recipe-image-container">
                    <img src="@item.ImageUrl" alt="@item.Title" class="recipe-image">
                </div>
                <h3>@item.Title</h3>
                <p>@item.Description</p>
                <p class="rating">
                    @if (averageRating == 0)
                    {
                    <p>Rating: None</p>
                    }
                    else
                    {
                    <p>Rating: @averageRating.ToString("0.0")</p>
                    }
                </p>
            </a>
        </div>
    }
</div>

<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortBy = ViewBag.CurrentSort, sortOrder = ViewBag.CurrentSortOrder }))
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.sort').click(function (e) {
                e.preventDefault();
                var sortBy = $(this).data('sort-by');
                var url = window.location.href.split('?')[0];
                var params = new URLSearchParams(window.location.search);
                var sortOrder = params.get('sortOrder');
                sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
                url += '?sortBy=' + sortBy + '&sortOrder=' + sortOrder;
                window.location.href = url;
            });
        });
    </script>
}
